// <auto-generated />
using EmployeeMgmnt.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EmployeeMgmnt.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    [Migration("20230921131456_empmgnmt")]
    partial class empmgnmt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EmployeeMgmnt.Models.Employee", b =>
                {
                    b.Property<int>("empid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("empid"));

                    b.Property<string>("empemail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("empfirstname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("empgender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("emplastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("empphonenumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("empid");

                    b.ToTable("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
